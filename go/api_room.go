/*
 * roomservice
 *
 * An implementation of joinable rooms
 *
 * API version: 0.0.1
 * Contact: decline@umass.edu
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"
	"strings"
)

// A RoomApiController binds http requests to an api service and writes the service results to the http response
type RoomApiController struct {
	service RoomApiServicer
}

// NewRoomApiController creates a default api controller
func NewRoomApiController(s RoomApiServicer) Router {
	return &RoomApiController{service: s}
}

// Routes returns all of the api route for the RoomApiController
func (c *RoomApiController) Routes() Routes {
	return Routes{
		{
			"AddRoom",
			strings.ToUpper("Post"),
			"/v1/room",
			c.AddRoom,
		},
	}
}

// AddRoom - Create a new room
func (c *RoomApiController) AddRoom(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.AddRoom()
	if err != nil {
		w.WriteHeader(500)
		return
	}

	EncodeJSONResponse(result, nil, w)
}
