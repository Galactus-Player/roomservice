/*
 * roomservice
 *
 * An implementation of joinable rooms
 *
 * API version: 0.0.1
 * Contact: decline@umass.edu
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"errors"
)

// DefaultApiService is a service that implents the logic for the DefaultApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API.
// Include any external packages or services that will be required by this service.
type DefaultApiService struct {
	// rooms is a mapping from the room id to the actual Room object
	rooms *map[string]Room
}

// NewDefaultApiService creates a default api service
func NewDefaultApiService(mapReference *map[string]Room) DefaultApiServicer {
	return &DefaultApiService{
		rooms: mapReference,
	}
}

// GetRoomByCode -
func (s *DefaultApiService) GetRoomByCode(code string) (interface{}, error) {
	// get the room using the map
	if s.rooms == nil {
		return nil, errors.New("map reference is nil, there is something wrong with initialization")
	}
	roomMap := *s.rooms
	retRoom, ok := roomMap[code]
	if !ok {
		return nil, errors.New("code does not exist")
	}

	return retRoom, nil
}
